# Notes on Installation
This is not a complete guide on installation. OWASP already has a perfectly serviceable [Installation Guide.](https://pwning.owasp-juice.shop/companion-guide/latest/part1/running.html) However, I've installed Juice-Shop 3+ times and had differing experiences that may help you if you get stuck or need some more information.

### Docker Image
This is by far the easiest way. I just spun up an Ubuntu Server VM, checked the box to install Docker during setup, then followed the instructions and it worked perfectly. Highly recommended if you don't know what you're doing. However there is one major drawback of using a Docker container. Many challenges in Juice-Shop are disabled. It seems like the devs expect you to not be running Docker in a VM and are concerned these challenges could break the container's sandbox and endanger your host system. So, to unlock the more advanced challenges I did the following.

### Node Install
In my same Ubuntu Server VM I stopped Docker and went about installing via Node. For a beginner, this was sorta hell. Despite the very simple instructions I struggled a lot. `git clone` didn't specify which version it was cloning and I didn't find out what build of node it called for until the installation was under way. I spent a while with ChatGPT trying to diagnose, learn NVM, get the right version, wiping the failed installation, etc. until it finally built and worked. That being said it's not all that hard if you're a more experienced Linux user. Just download one of their pre-packed distributions that matches your version of Node, install, and you're off to the races. However, I had another problem with this. I was sick of spinning up and shutting down an extra VM on my host.

### What I Use and Why You Shouldn't (Raspberry Pi)
Honestly, whatever you do, probably don't install the node version on a Raspberry Pi. It solves both my problems. It runs Node, it's always up, I don't need another VM. However getting it to work was a nightmare. Juggling Node versions, not being able to download one of their pre-packaged distributions, expanding RAM with slower storage because the build is absolutely not going to work on 1 gig of RAM, the build itself taking over an hour, getting PM2 to work and corrupting my previously built version. Not even once. That being said once it's all running the app itself is fine, it's just the build that destroys the hardware. But hey, I have a tiny home lab now so it's something right? I didn't just waste like 10 hours of my life right? I learned so it's worth it right?